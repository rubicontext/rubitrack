#!/usr/bin/env python3
"""
Exemple d'utilisation du service d'export de cue points vers Rekordbox
"""

import os
import sys

# Configuration Django
sys.path.append('/mnt/c/Users/antoine.carnet/work/perso/rubitrack/rubitrack')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'rubitrack.settings')

import django
django.setup()

from track.collection.rekordbox.export_service import add_cue_points_to_rekordbox_collection


def export_cue_points_example():
    """
    Exemple d'utilisation pour exporter les cue points vers Rekordbox
    """
    print("=== Export de cue points vers Rekordbox ===\n")
    
    # Chemin vers votre collection Rekordbox
    # Modifiez ce chemin selon votre installation
    rekordbox_collection_path = input("Chemin vers votre collection.xml Rekordbox: ").strip()
    
    if not rekordbox_collection_path:
        print("Exemple avec un chemin par d√©faut...")
        rekordbox_collection_path = "/path/to/rekordbox/collection.xml"
    
    # V√©rifier que le fichier existe
    if not os.path.exists(rekordbox_collection_path):
        print(f"‚ùå Fichier non trouv√©: {rekordbox_collection_path}")
        print("\nVeuillez fournir le chemin correct vers votre fichier collection.xml de Rekordbox")
        return
    
    # Cr√©er un fichier de sauvegarde
    backup_path = rekordbox_collection_path + ".backup"
    output_path = rekordbox_collection_path.replace('.xml', '_with_rubitrack_cues.xml')
    
    print(f"Collection source: {rekordbox_collection_path}")
    print(f"Sauvegarde: {backup_path}")  
    print(f"Sortie avec cue points: {output_path}")
    
    # Cr√©er une sauvegarde
    try:
        import shutil
        shutil.copy2(rekordbox_collection_path, backup_path)
        print("‚úÖ Sauvegarde cr√©√©e")
    except Exception as e:
        print(f"‚ùå Erreur lors de la cr√©ation de la sauvegarde: {e}")
        return
    
    # Lancer l'export
    print("\nüöÄ Lancement de l'export...")
    
    try:
        stats = add_cue_points_to_rekordbox_collection(
            collection_file_path=rekordbox_collection_path,
            output_file_path=output_path
        )
        
        print("\nüìä R√©sultats de l'export:")
        print(f"   Succ√®s: {'‚úÖ' if stats['success'] else '‚ùå'}")
        
        if stats['success']:
            print(f"   Tracks trait√©es: {stats['tracks_processed']}")
            print(f"   Tracks trouv√©es dans Rekordbox: {stats['tracks_matched']}")
            print(f"   Tracks avec cue points ajout√©s: {stats['tracks_with_cue_points']}")
            print(f"   Nombre total de cue points ajout√©s: {stats['cue_points_added']}")
            
            if stats['tracks_matched'] > 0:
                match_percentage = (stats['tracks_matched'] / stats['tracks_processed']) * 100
                print(f"   Taux de correspondance: {match_percentage:.1f}%")
        else:
            print(f"   Erreur: {stats.get('error', 'Erreur inconnue')}")
    
    except Exception as e:
        print(f"‚ùå Erreur lors de l'export: {e}")
        import traceback
        traceback.print_exc()
    
    print("\nüìã Instructions post-export:")
    print("1. V√©rifiez le fichier de sortie avant de remplacer votre collection originale")
    print("2. Fermez Rekordbox avant de remplacer le fichier collection.xml")
    print("3. Remplacez votre collection.xml par le fichier g√©n√©r√©")
    print("4. Red√©marrez Rekordbox pour voir les nouveaux cue points")


if __name__ == "__main__":
    export_cue_points_example()
