# Generated by Django 3.2.5 on 2021-12-09 09:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=3)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('bpm', models.FloatField(blank=True, null=True)),
                ('ranking', models.IntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Average'), (3, 'Good'), (4, 'Very Good'), (5, 'Excellent')], default=None, null=True)),
                ('musical_key', models.CharField(blank=True, max_length=3, null=True)),
                ('file_name', models.CharField(blank=True, max_length=200, null=True)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('comment2', models.CharField(blank=True, max_length=500, null=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('bitrate', models.IntegerField(blank=True, null=True)),
                ('playcount', models.IntegerField(blank=True, null=True)),
                ('energy', models.IntegerField(blank=True, null=True)),
                ('date_collection_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date added to collection')),
                ('date_collection_updated', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date of modification in collection')),
                ('date_collection_source_updated', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date of modification in the source collection (Traktor/Serato/Rekordbox)')),
                ('date_last_played', models.DateTimeField(blank=True, null=True, verbose_name='date last played')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='track.artist')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='track.genre')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='TransitionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('acronym', models.CharField(blank=True, max_length=3, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.IntegerField(choices=[(1, 'Poor'), (2, 'Average'), (3, 'Good'), (4, 'Very Good'), (5, 'Excellent')], default=3)),
                ('comment', models.TextField(blank=True, max_length=200, null=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('track_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination', to='track.track')),
                ('track_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source', to='track.track')),
                ('transition_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='track.transitiontype')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=200)),
                ('tracks', models.ManyToManyField(to='track.Track')),
            ],
        ),
        migrations.CreateModel(
            name='CurrentlyPlaying',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_played', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date played')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='track.track')),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('tracks', models.ManyToManyField(to='track.Track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomTrackTransition',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('track.track',),
        ),
    ]
